/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.io.font.PdfEncodings;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import conn.Data_Access;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kien_BKHN
 */
public class formTimKiem extends javax.swing.JFrame {

    /**
     * Creates new form formTimKiem
     */
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    
    //String LINK_IMAGE="image//timkiem.JPG";

    public formTimKiem() {
        initComponents();
        jRMaDeTai.setSelected(true);
        jRMaChuyenDe.setSelected(true);
        jRMaGV.setSelected(true);
        jRMaChiKhac.setSelected(true);
        jRMaTheoDoi.setSelected(true);
        printTableDeTai();
        printTableChuyenDe();
        printTableGV();
        printTableTTTheoDoi();
        printTableChiPhiKhac();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtTimKiemDeTai = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jRMaDeTai = new javax.swing.JRadioButton();
        jRTenDeTai = new javax.swing.JRadioButton();
        jRLoaiDeTai = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jRMaGV = new javax.swing.JRadioButton();
        jRTenGV = new javax.swing.JRadioButton();
        jRMaDeTaiGV = new javax.swing.JRadioButton();
        jRChucDanh = new javax.swing.JRadioButton();
        jRBoMon = new javax.swing.JRadioButton();
        jRChiBo = new javax.swing.JRadioButton();
        txtTimKiemGV = new javax.swing.JTextField();
        btnTimKiemGV = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        txtTimKiemChuyenDe = new javax.swing.JTextField();
        btnTimKiemChuyenDe = new javax.swing.JButton();
        jRMaChuyenDe = new javax.swing.JRadioButton();
        jRTenChuyenDe = new javax.swing.JRadioButton();
        jRMaDeTaiCD = new javax.swing.JRadioButton();
        jRNguoiThucHien = new javax.swing.JRadioButton();
        jRTinhTrangThucHien = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btnInKetQuaCD = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        txtTimKiemChiKhac = new javax.swing.JTextField();
        btnTimKiemChiKhac = new javax.swing.JButton();
        jRMaChiKhac = new javax.swing.JRadioButton();
        jRMaDeTaiChiKhac = new javax.swing.JRadioButton();
        jRNguoiThucHienChiKhac = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        btnInKetQuaChiKhac = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        txtTimKiemTTTD = new javax.swing.JTextField();
        btnTimKiemTTTD = new javax.swing.JButton();
        jRMaTheoDoi = new javax.swing.JRadioButton();
        jRMaDeTaiTheoDoi = new javax.swing.JRadioButton();
        jRNguoiThucHienTheoDoi = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        btnInKetQuaTheoDoi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tìm kiếm");

        jButton1.setText("Tìm kiếm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRMaDeTai);
        jRMaDeTai.setText("Mã đề tài");

        buttonGroup1.add(jRTenDeTai);
        jRTenDeTai.setText("Tên đề tài");

        buttonGroup1.add(jRLoaiDeTai);
        jRLoaiDeTai.setText("Loại đề tài");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(txtTimKiemDeTai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jRMaDeTai)
                .addGap(18, 18, 18)
                .addComponent(jRTenDeTai)
                .addGap(29, 29, 29)
                .addComponent(jRLoaiDeTai)
                .addGap(0, 724, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimKiemDeTai)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRMaDeTai)
                    .addComponent(jRTenDeTai)
                    .addComponent(jRLoaiDeTai))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
        );

        jButton2.setText("In kết quả tìm kiếm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Thông tin đề tài", jPanel1);

        buttonGroup2.add(jRMaGV);
        jRMaGV.setText("Mã giảng viên");

        buttonGroup2.add(jRTenGV);
        jRTenGV.setText("Tên giảng viên");

        buttonGroup2.add(jRMaDeTaiGV);
        jRMaDeTaiGV.setText("Mã đề tài");

        buttonGroup2.add(jRChucDanh);
        jRChucDanh.setText("Chức Danh");

        buttonGroup2.add(jRBoMon);
        jRBoMon.setText("Bộ Môn");

        buttonGroup2.add(jRChiBo);
        jRChiBo.setText("Chi Bộ");

        btnTimKiemGV.setText("Tìm kiếm");
        btnTimKiemGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemGVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jRMaGV)
                .addGap(18, 18, 18)
                .addComponent(jRTenGV)
                .addGap(29, 29, 29)
                .addComponent(jRMaDeTaiGV)
                .addGap(40, 40, 40)
                .addComponent(jRChucDanh)
                .addGap(39, 39, 39)
                .addComponent(jRBoMon)
                .addGap(45, 45, 45)
                .addComponent(jRChiBo)
                .addContainerGap(365, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(txtTimKiemGV)
                .addGap(10, 10, 10)
                .addComponent(btnTimKiemGV, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiemGV, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemGV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRMaGV)
                    .addComponent(jRTenGV)
                    .addComponent(jRMaDeTaiGV)
                    .addComponent(jRChucDanh)
                    .addComponent(jRBoMon)
                    .addComponent(jRChiBo)))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("In kết quả tìm kiếm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Thông tin giảng viên", jPanel2);

        btnTimKiemChuyenDe.setText("Tìm kiếm");
        btnTimKiemChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemChuyenDeActionPerformed(evt);
            }
        });

        buttonGroup3.add(jRMaChuyenDe);
        jRMaChuyenDe.setText("Mã chuyên đề");

        buttonGroup3.add(jRTenChuyenDe);
        jRTenChuyenDe.setText("Tên chuyên đề");

        buttonGroup3.add(jRMaDeTaiCD);
        jRMaDeTaiCD.setText("Mã đề tài");

        buttonGroup3.add(jRNguoiThucHien);
        jRNguoiThucHien.setText("Người thực hiện");

        buttonGroup3.add(jRTinhTrangThucHien);
        jRTinhTrangThucHien.setText("Tình trạng thực hiện");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jRMaChuyenDe)
                .addGap(18, 18, 18)
                .addComponent(jRTenChuyenDe)
                .addGap(18, 18, 18)
                .addComponent(jRMaDeTaiCD)
                .addGap(18, 18, 18)
                .addComponent(jRNguoiThucHien)
                .addGap(18, 18, 18)
                .addComponent(jRTinhTrangThucHien)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(txtTimKiemChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 862, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiemChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiemChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRMaChuyenDe)
                    .addComponent(jRTenChuyenDe)
                    .addComponent(jRMaDeTaiCD)
                    .addComponent(jRNguoiThucHien)
                    .addComponent(jRTinhTrangThucHien)))
        );

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        btnInKetQuaCD.setText("In kết quả tìm kiếm");
        btnInKetQuaCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInKetQuaCDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnInKetQuaCD, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInKetQuaCD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Thông tin chuyên đề", jPanel3);

        btnTimKiemChiKhac.setText("Tìm kiếm");
        btnTimKiemChiKhac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemChiKhacActionPerformed(evt);
            }
        });

        buttonGroup4.add(jRMaChiKhac);
        jRMaChiKhac.setText("Mã chi khác");

        buttonGroup4.add(jRMaDeTaiChiKhac);
        jRMaDeTaiChiKhac.setText("Mã đề tài");

        buttonGroup4.add(jRNguoiThucHienChiKhac);
        jRNguoiThucHienChiKhac.setText("Người thực hiện");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(txtTimKiemChiKhac)
                .addGap(10, 10, 10)
                .addComponent(btnTimKiemChiKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jRMaChiKhac)
                .addGap(18, 18, 18)
                .addComponent(jRMaDeTaiChiKhac)
                .addGap(26, 26, 26)
                .addComponent(jRNguoiThucHienChiKhac)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiemChiKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemChiKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRMaChiKhac)
                    .addComponent(jRMaDeTaiChiKhac)
                    .addComponent(jRNguoiThucHienChiKhac)))
        );

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        btnInKetQuaChiKhac.setText("In kết quả tìm kiếm");
        btnInKetQuaChiKhac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInKetQuaChiKhacActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnInKetQuaChiKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInKetQuaChiKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Thông tin chi phí khác", jPanel4);

        btnTimKiemTTTD.setText("Tìm Kiếm");
        btnTimKiemTTTD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTTTDActionPerformed(evt);
            }
        });

        buttonGroup5.add(jRMaTheoDoi);
        jRMaTheoDoi.setText("Mã theo dõi");

        buttonGroup5.add(jRMaDeTaiTheoDoi);
        jRMaDeTaiTheoDoi.setText("Mã đề tài");

        buttonGroup5.add(jRNguoiThucHienTheoDoi);
        jRNguoiThucHienTheoDoi.setText("Người thực hiện");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(txtTimKiemTTTD)
                .addGap(10, 10, 10)
                .addComponent(btnTimKiemTTTD, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jRMaTheoDoi)
                .addGap(18, 18, 18)
                .addComponent(jRMaDeTaiTheoDoi)
                .addGap(29, 29, 29)
                .addComponent(jRNguoiThucHienTheoDoi)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiemTTTD, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemTTTD, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRMaTheoDoi)
                    .addComponent(jRMaDeTaiTheoDoi)
                    .addComponent(jRNguoiThucHienTheoDoi)))
        );

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        btnInKetQuaTheoDoi.setText("In kết quả tìm kiếm");
        btnInKetQuaTheoDoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInKetQuaTheoDoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnInKetQuaTheoDoi, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnInKetQuaTheoDoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Thông tin theo dõi", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String luachon = txtTimKiemDeTai.getText().trim();
        String truongTimKiemDeTai = "";
        if (luachon.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Bạn chưa điền thông tin tìm kiếm!");
        } else {
            if (jRLoaiDeTai.isSelected()) {
                truongTimKiemDeTai = "LoaiDeTai";
            } else if (jRMaDeTai.isSelected()) {
                truongTimKiemDeTai = "MaDeTai";
            } else {
                truongTimKiemDeTai = "TenDeTai";
            }
            String sql = "SELECT * from thongtin_detai \nWHERE " + truongTimKiemDeTai + " like '%" + luachon + "%'";
            System.out.println(sql);
            printTableDeTai(sql);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnTimKiemGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemGVActionPerformed
        String luachon = txtTimKiemGV.getText().trim();
        String truongTimKiemGV = "";
        if (luachon.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Bạn chưa điền thông tin tìm kiếm!");
        } else {
            if (jRMaGV.isSelected()) {
                truongTimKiemGV = "MaGV";
            } else if (jRMaDeTaiGV.isSelected()) {
                truongTimKiemGV = "MaDeTai";
            } else if (jRTenGV.isSelected()) {
                truongTimKiemGV = "HoTenGV";
            } else if (jRChucDanh.isSelected()) {
                truongTimKiemGV = "ChucDanh";
            } else if (jRBoMon.isSelected()) {
                truongTimKiemGV = "BoMon";
            } else {
                truongTimKiemGV = "ChiBo";
            }

            String sql = "SELECT * from thongtin_giangvien \nWHERE " + truongTimKiemGV + " like '%" + luachon + "%'";
            System.out.println(sql);

            printTableGV(sql);
        }
    }//GEN-LAST:event_btnTimKiemGVActionPerformed

    private void btnTimKiemChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemChuyenDeActionPerformed
        String luachon = txtTimKiemChuyenDe.getText().trim();
        String truongTimKiemCD = "";
        if (luachon.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Bạn chưa điền thông tin tìm kiếm!");
        } else {
            if (jRMaChuyenDe.isSelected()) {
                truongTimKiemCD = "MaChuyenDe";
            } else if (jRMaDeTaiCD.isSelected()) {
                truongTimKiemCD = "MaDeTai";
            } else if (jRTenChuyenDe.isSelected()) {
                truongTimKiemCD = "TenChuyenDe";
            } else if (jRNguoiThucHien.isSelected()) {
                truongTimKiemCD = "NguoiThucHien";
            } else if (jRTinhTrangThucHien.isSelected()) {
                truongTimKiemCD = "TinhTrangThucHien";

            }

            String sql = "SELECT * from  thongtin_chuyende \nWHERE " + truongTimKiemCD + " like '%" + luachon + "%'";
            System.out.println(sql);
            printTableChuyenDe(sql);
        }
    }//GEN-LAST:event_btnTimKiemChuyenDeActionPerformed

    private void btnTimKiemChiKhacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemChiKhacActionPerformed
        String luachon = txtTimKiemChiKhac.getText().trim();
        String truongTimKiemChiPhiKhac = "";
        if (luachon.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Bạn chưa điền thông tin tìm kiếm!");
        } else {
            if (jRMaChiKhac.isSelected()) {
                truongTimKiemChiPhiKhac = "MaChiKhac";
            } else if (jRMaDeTaiChiKhac.isSelected()) {
                truongTimKiemChiPhiKhac = "MaDeTai";
            } else if (jRNguoiThucHienChiKhac.isSelected()) {
                truongTimKiemChiPhiKhac = "NguoiThucHien";
            }

            String sql = "SELECT * from thongtin_chiphikhac \nWHERE " + truongTimKiemChiPhiKhac + " like '%" + luachon + "%'";
            System.out.println(sql);
            printTableChiPhiKhac(sql);
        }
    }//GEN-LAST:event_btnTimKiemChiKhacActionPerformed

    private void btnTimKiemTTTDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTTTDActionPerformed
        String luachon = txtTimKiemTTTD.getText().trim();
        String truongTimKiemTheoDoi = "";
        if (luachon.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Bạn chưa điền thông tin tìm kiếm!");
        } else {
            if (jRMaTheoDoi.isSelected()) {
                truongTimKiemTheoDoi = "MaTheoDoi";
            } else if (jRMaDeTaiTheoDoi.isSelected()) {
                truongTimKiemTheoDoi = "MaDeTai";
            } else if (jRNguoiThucHienTheoDoi.isSelected()) {
                truongTimKiemTheoDoi = "NguoiThucHien";
            }

            String sql = "SELECT * from thongtin_theodoi \nWHERE " + truongTimKiemTheoDoi + " like '%" + luachon + "%'";
            System.out.println(sql);
            printTableTTTheoDoi(sql);
        }
    }//GEN-LAST:event_btnTimKiemTTTDActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String link="";
        JFileChooser fileChoose = new JFileChooser("D:\\");
        int check = fileChoose.showOpenDialog(fileChoose);
        if ( check == JFileChooser.OPEN_DIALOG ) {
            link = fileChoose.getSelectedFile().getAbsolutePath();
            try {
                PdfFont hFont = PdfFontFactory.createFont("font\\tahoma.ttf",PdfEncodings.IDENTITY_H,true);
                PdfWriter pdfWriter= new PdfWriter(link);
                Calendar c = Calendar.getInstance();
                PdfDocument pdfDocument= new PdfDocument(pdfWriter);
                
                Document document= new Document(pdfDocument);
                
                document.add(new Paragraph("TRƯỜNG ĐẠI HỌC BÁCH KHOA HÀ NỘI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph("Viện Công Nghệ Thông Tin & Truyền Thông").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("TÌM KIẾM THÔNG TIN ĐỀ TÀI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("TÌM KIẾM SÁCH").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setItalic().setFontSize(10));
                
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                Table table = new Table(10);
                table.addHeaderCell("STT").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Tên đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Loại đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Cấp đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Đơn vị chủ trì").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Đơn vị thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Thời gian bắt đầu").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Thời gian kết thúc").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Kinh phí thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                for(int row=0;row<jTable1.getRowCount();row++){
                    
                    for(int column=0;column<jTable1.getColumnCount();column++){
                        
                        table.addCell(jTable1.getValueAt(row, column)+"").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                    }
                }
                document.add(table);
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Hà Nội,Ngày"+ c.get(Calendar.DAY_OF_MONTH) + "/" + (c.get(Calendar.MONTH) + 1)
                        + "/" + c.get(Calendar.YEAR)).setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph("Người tạo bảng").setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph(" "));
                document.close();
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler",link});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi in file");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String link="";
        JFileChooser fileChoose = new JFileChooser("D:\\");
        int check = fileChoose.showOpenDialog(fileChoose);
        if ( check == JFileChooser.OPEN_DIALOG ) {
            link = fileChoose.getSelectedFile().getAbsolutePath();
            try {
                PdfFont hFont = PdfFontFactory.createFont("font\\tahoma.ttf",PdfEncodings.IDENTITY_H,true);
                PdfWriter pdfWriter= new PdfWriter(link);
                Calendar c = Calendar.getInstance();
                PdfDocument pdfDocument= new PdfDocument(pdfWriter);
                
                Document document= new Document(pdfDocument);
                
                document.add(new Paragraph("TRƯỜNG ĐẠI HỌC BÁCH KHOA HÀ NỘI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph("Viện Công Nghệ Thông Tin & Truyền Thông").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("TÌM KIẾM THÔNG TIN GIẢNG VIÊN").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("TÌM KIẾM SÁCH").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setItalic().setFontSize(10));
                
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                Table table = new Table(11);
                table.addHeaderCell("STT").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã giáo viên").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Họ tên giáo viên").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Chức dang").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Điện thoại").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Email").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Địa chỉ").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Bộ môn").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Chi bộ").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Ghi chú").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Ngày sinh").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                for(int row=0;row<jTable2.getRowCount();row++){
                    
                    for(int column=0;column<jTable2.getColumnCount();column++){
                        
                        table.addCell(jTable2.getValueAt(row, column)+"").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                    }
                }
                document.add(table);
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Hà Nội,Ngày"+ c.get(Calendar.DAY_OF_MONTH) + "/" + (c.get(Calendar.MONTH) + 1)
                        + "/" + c.get(Calendar.YEAR)).setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph("Người tạo bảng").setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph(" "));
                document.close();
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler",link});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi in file");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnInKetQuaCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInKetQuaCDActionPerformed
        String link="";
        JFileChooser fileChoose = new JFileChooser("D:\\");
        int check = fileChoose.showOpenDialog(fileChoose);
        if ( check == JFileChooser.OPEN_DIALOG ) {
            link = fileChoose.getSelectedFile().getAbsolutePath();
            try {
                PdfFont hFont = PdfFontFactory.createFont("font\\tahoma.ttf",PdfEncodings.IDENTITY_H,true);
                PdfWriter pdfWriter= new PdfWriter(link);
                Calendar c = Calendar.getInstance();
                PdfDocument pdfDocument= new PdfDocument(pdfWriter);
                
                Document document= new Document(pdfDocument);
                
                document.add(new Paragraph("TRƯỜNG ĐẠI HỌC BÁCH KHOA HÀ NỘI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph("Viện Công Nghệ Thông Tin & Truyền Thông").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("TÌM KIẾM THÔNG TIN CHUYÊN ĐỀ").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("TÌM KIẾM SÁCH").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setItalic().setFontSize(10));
                
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                Table table = new Table(10);
                table.addHeaderCell("STT").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã chuyên đề").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Tên chuyên đề").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Thời gian bắt đầu").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Thời gian kết thúc").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Số tiền").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Người thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Ngày ký hợp đồng").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Ngày thanh lý hợp đồng").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Số hợp đồng").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Báo cáo chuyên đề").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Hợp đồng,thanh lý").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Tình trạng thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Số tiền thuế").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                for(int row=0;row<jTable3.getRowCount();row++){
                    
                    for(int column=0;column<jTable3.getColumnCount();column++){
                        
                        table.addCell(jTable3.getValueAt(row, column)+"").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                    }
                }
                document.add(table);
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Hà Nội,Ngày"+ c.get(Calendar.DAY_OF_MONTH) + "/" + (c.get(Calendar.MONTH) + 1)
                        + "/" + c.get(Calendar.YEAR)).setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph("Người tạo bảng").setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph(" "));
                document.close();
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler",link});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi in file");
            }
        }
    }//GEN-LAST:event_btnInKetQuaCDActionPerformed

    private void btnInKetQuaChiKhacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInKetQuaChiKhacActionPerformed
        String link="";
        JFileChooser fileChoose = new JFileChooser("D:\\");
        int check = fileChoose.showOpenDialog(fileChoose);
        if ( check == JFileChooser.OPEN_DIALOG ) {
            link = fileChoose.getSelectedFile().getAbsolutePath();
            try {
                PdfFont hFont = PdfFontFactory.createFont("font\\tahoma.ttf",PdfEncodings.IDENTITY_H,true);
                PdfWriter pdfWriter= new PdfWriter(link);
                Calendar c = Calendar.getInstance();
                PdfDocument pdfDocument= new PdfDocument(pdfWriter);
                
                Document document= new Document(pdfDocument);
                
                document.add(new Paragraph("TRƯỜNG ĐẠI HỌC BÁCH KHOA HÀ NỘI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph("Viện Công Nghệ Thông Tin & Truyền Thông").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("TÌM KIẾM THÔNG TIN CHI PHÍ KHÁC").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("TÌM KIẾM SÁCH").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setItalic().setFontSize(10));
                
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                Table table = new Table(11);
                table.addHeaderCell("STT").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã chi phí khác").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Lý do").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Số tiền").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Thời gian bắt đầu").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Thời gian kết thúc").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Người thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Thời gian chi").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Ghi chú").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Tình trạng chi").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Báo cáo chuyên đề").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Hợp đồng,thanh lý").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Tình trạng thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Số tiền thuế").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                for(int row=0;row<jTable4.getRowCount();row++){
                    
                    for(int column=0;column<jTable4.getColumnCount();column++){
                        
                        table.addCell(jTable4.getValueAt(row, column)+"").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                    }
                }
                document.add(table);
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Hà Nội,Ngày"+ c.get(Calendar.DAY_OF_MONTH) + "/" + (c.get(Calendar.MONTH) + 1)
                        + "/" + c.get(Calendar.YEAR)).setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph("Người tạo bảng").setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph(" "));
                document.close();
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler",link});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi in file");
            }
        }
    }//GEN-LAST:event_btnInKetQuaChiKhacActionPerformed

    private void btnInKetQuaTheoDoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInKetQuaTheoDoiActionPerformed
        String link="";
        JFileChooser fileChoose = new JFileChooser("D:\\");
        int check = fileChoose.showOpenDialog(fileChoose);
        if ( check == JFileChooser.OPEN_DIALOG ) {
            link = fileChoose.getSelectedFile().getAbsolutePath();
            try {
                PdfFont hFont = PdfFontFactory.createFont("font\\tahoma.ttf",PdfEncodings.IDENTITY_H,true);
                PdfWriter pdfWriter= new PdfWriter(link);
                Calendar c = Calendar.getInstance();
                PdfDocument pdfDocument= new PdfDocument(pdfWriter);
                
                Document document= new Document(pdfDocument);
                
                document.add(new Paragraph("TRƯỜNG ĐẠI HỌC BÁCH KHOA HÀ NỘI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph("Viện Công Nghệ Thông Tin & Truyền Thông").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("TÌM KIẾM THÔNG TIN THEO DÕI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("TÌM KIẾM SÁCH").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setItalic().setFontSize(10));
                
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                Table table = new Table(8);
                table.addHeaderCell("STT").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã theo dõi").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Mã đề tài").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Lý do").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Số tiền").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Ngày thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Người thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Ghi chú").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Thời gian chi").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
               //table.addHeaderCell("Ghi chú").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Tình trạng chi").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Báo cáo chuyên đề").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Hợp đồng,thanh lý").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Tình trạng thực hiện").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                //table.addHeaderCell("Số tiền thuế").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                for(int row=0;row<jTable5.getRowCount();row++){
                    
                    for(int column=0;column<jTable5.getColumnCount();column++){
                        
                        table.addCell(jTable5.getValueAt(row, column)+"").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                    }
                }
                document.add(table);
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Hà Nội,Ngày"+ c.get(Calendar.DAY_OF_MONTH) + "/" + (c.get(Calendar.MONTH) + 1)
                        + "/" + c.get(Calendar.YEAR)).setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph("Người tạo bảng").setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph(" "));
                document.close();
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler",link});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi in file");
            }
        }
    }//GEN-LAST:event_btnInKetQuaTheoDoiActionPerformed
    
    private void printTableDeTai(String sql) {
        try {

            String[] objTieuDe = new String[]{"STT", "Mã đề tài", "Tên đề tài", "Loại đề tài", "Cấp đề tài", "Đơn vị chủ trì", "Đơn vị thực hiện", "Thời gian bắt đầu", "Thời gian kết thúc", "Kinh phí thực hiện"};

            DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);

            jTable1.setLayout(null);
            jTable1.setRowHeight(25);
            Data_Access dA = new Data_Access();

            Connection conn = dA.getConnection();

            try {
                Statement sT = conn.createStatement();
                ResultSet rS = sT.executeQuery(sql);
                int count = 0;
                while (rS.next()) {

                    count++;
                    Object[] obj = new Object[10];
                    obj[0] = count;
                    obj[1] = rS.getString("MaDeTai");
                    obj[2] = rS.getString("TenDeTai");
                    obj[3] = rS.getString("LoaiDeTai");
                    obj[4] = rS.getString("CapDeTai");
                    obj[5] = rS.getString("DonViChuTri");
                    obj[6] = rS.getString("DonViThucHien");
                    obj[7] = dateFormat.format(rS.getDate("ThoiGianBatDau"));
                    obj[8] = dateFormat.format(rS.getDate("ThoiGianKetThuc"));
                    obj[9] = rS.getString("KinhPhiThucHien");

                    tableModel1.addRow(obj);
                }

                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Không tồn tại đề tài bạn tìm kiếm!");

                    return;
                }
            } catch (SQLException ex) {
                System.out.println(ex.toString());
                JOptionPane.showMessageDialog(null, "Xảy ra lỗi trong quá trình tìm !", "Lỗi ", JOptionPane.ERROR_MESSAGE);

            }

            jTable1.setModel(tableModel1);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }

    }

    private void printTableGV(String sql) {
        try {

            String[] objTieuDe = new String[]{"STT", "Mã GV", "Mã đề tài", "Họ tên GV", "Chức danh", "Điện thoại", "Email", "Địa chỉ", "Bộ Môn", "Chi bộ", "Ngày sinh"};

            DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);

            jTable2.setLayout(null);
            jTable2.setRowHeight(25);
            Data_Access dA = new Data_Access();

            Connection conn = dA.getConnection();

            try {
                Statement sT = conn.createStatement();
                ResultSet rS = sT.executeQuery(sql);
                int count = 0;
                while (rS.next()) {

                    count++;
                    Object[] obj = new Object[11];
                    obj[0] = count;
                    obj[1] = rS.getString("MaGV");
                    obj[2] = rS.getString("MaDeTai");
                    obj[3] = rS.getString("HoTenGV");
                    obj[4] = rS.getString("ChucDanh");
                    obj[5] = rS.getString("DienThoai");
                    obj[6] = rS.getString("Email");
                    obj[7] = rS.getString("DiaChi");
                    obj[8] = rS.getString("BoMon");
                    obj[9] = rS.getString("ChiBo");
                    obj[10] = dateFormat.format(rS.getDate("NgaySinh"));

                    tableModel1.addRow(obj);
                }

                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Không tồn tại giảng viên bạn tìm kiếm!");

                    return;
                }
            } catch (SQLException ex) {
                System.out.println(ex.toString());
                JOptionPane.showMessageDialog(null, "Xảy ra lỗi trong quá trình tìm !", "Lỗi ", JOptionPane.ERROR_MESSAGE);

            }

            jTable2.setModel(tableModel1);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }

    }

    private void printTableChuyenDe(String sql) {
        try {

            String[] objTieuDe = new String[]{"STT", "Mã chuyên đề", "Tên chuyên đề", "Mã đề tài", "Thời gian bắt đầu", "Thời gian kết thúc", "Số tiền", "Người thực hiện", "Tình trạng thực hiện", "Số tiền thuế"};

            DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);
            jTable3.setLayout(null);
            Data_Access dA = new Data_Access();

            Connection conn = dA.getConnection();

            try {
                Statement sT = conn.createStatement();
                ResultSet rS = sT.executeQuery(sql);
                int count = 0;
                while (rS.next()) {
                    count++;
                    Object[] obj = new Object[10];
                    obj[0] = count;
                    obj[1] = rS.getString("MaChuyenDe");
                    obj[2] = rS.getString("TenChuyenDe");
                    obj[3] = rS.getString("MaDeTai");
                    obj[4] = dateFormat.format(rS.getDate("ThoiGianBatDau"));
                    obj[5] = dateFormat.format(rS.getDate("ThoiGianKetThuc"));
                    obj[6] = rS.getDouble("SoTien");
                    obj[7] = rS.getString("NguoiThucHien");
                    obj[8] = rS.getString("TinhTrangThucHien");
                    obj[9] = rS.getDouble("SoTienThue");

                    tableModel1.addRow(obj);
                }

                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Không tồn tại chuyên đề bạn tìm kiếm!");

                    return;
                }
            } catch (SQLException ex) {
                System.out.println(ex.toString());
                JOptionPane.showMessageDialog(null, "Xảy ra lỗi trong quá trình tìm !", "Lỗi ", JOptionPane.ERROR_MESSAGE);

            }

            jTable3.setModel(tableModel1);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }

    }

    private void printTableChiPhiKhac(String sql) {
        try {

            String[] objTieuDe = new String[]{"STT", "Mã chi khác", "Mã đề tài", "Lí do", "Số tiền", "Thời gian bắt đầu", "Thời gian kết thúc", "Người thực hiện", "Thời gian chi", "Ghi chú", "Tình trạng chi"};

            DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);
            jTable4.setLayout(null);
            Data_Access dA = new Data_Access();

            Connection conn = dA.getConnection();

            try {
                Statement sT = conn.createStatement();
                ResultSet rS = sT.executeQuery(sql);
                int count = 0;
                while (rS.next()) {
                    count++;
                    Object[] obj = new Object[11];
                    obj[0] = count;
                    obj[1] = rS.getString("MaChiKhac");
                    obj[2] = rS.getString("MaDeTai");
                    obj[3] = rS.getString("LiDo");
                    obj[4] = rS.getDouble("SoTien");
                    obj[5] = dateFormat.format(rS.getDate("ThoiGianBatDau"));
                    obj[6] = dateFormat.format(rS.getDate("ThoiGianKetThuc"));
                    obj[7] = rS.getString("NguoiThucHien");
                    obj[8] = dateFormat.format(rS.getDate("ThoiGianChi"));
                    obj[9] = rS.getString("GhiChu");
                    obj[10] = rS.getString("TinhTrangChi");

                    tableModel1.addRow(obj);
                }

                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Không tồn tại thông tin chi phí khác bạn tìm kiếm!");

                    return;
                }
            } catch (SQLException ex) {
                System.out.println(ex.toString());
                JOptionPane.showMessageDialog(null, "Xảy ra lỗi trong quá trình tìm !", "Lỗi ", JOptionPane.ERROR_MESSAGE);

            }

            jTable4.setModel(tableModel1);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }

    }

    private void printTableTTTheoDoi(String sql) {
        try {

            String[] objTieuDe = new String[]{"STT", "Mã theo dõi", "Mã đề tài", "Lí do", "Số tiền", "Ngày thực hiện", "Người thực hiện", "Ghi chú"};

            DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);
            jTable5.setLayout(null);
            Data_Access dA = new Data_Access();

            Connection conn = dA.getConnection();

            try {
                Statement sT = conn.createStatement();
                ResultSet rS = sT.executeQuery(sql);
                int count = 0;
                while (rS.next()) {
                    count++;
                    Object[] obj = new Object[8];
                    obj[0] = count;
                    obj[1] = rS.getString("MaTheoDoi");
                    obj[2] = rS.getString("MaDeTai");
                    obj[3] = rS.getString("LiDo");
                    obj[4] = rS.getDouble("SoTien");
                    obj[5] = dateFormat.format(rS.getDate("NgayThucHien"));
                    obj[6] = rS.getString("NguoiThucHien");
                    obj[7] = rS.getString("GhiChu");

                    tableModel1.addRow(obj);
                }

                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Không tồn tại thông tin chi phí khác bạn tìm kiếm!");

                    return;
                }
            } catch (SQLException ex) {
                System.out.println(ex.toString());
                JOptionPane.showMessageDialog(null, "Xảy ra lỗi trong quá trình tìm !", "Lỗi ", JOptionPane.ERROR_MESSAGE);

            }

            jTable5.setModel(tableModel1);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }

    }
    
    private void printTableDeTai() {
        String sql = "Select * from thongtin_detai";
        String[] objTieuDe = new String[]{"STT", "Mã đề tài", "Tên đề tài", "Loại đề tài", "Cấp đề tài", "Đơn vị chủ trì", "Đơn vị thực hiện", "Thời gian bắt đầu", "Thời gian kết thúc", "Kinh phí thực hiện"};

        DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);

        jTable1.setLayout(null);
        jTable1.setRowHeight(25);
        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);
            int count = 0;
            while (rS.next()) {

                count++;
                Object[] obj = new Object[10];
                obj[0] = count;
                obj[1] = rS.getString("MaDeTai");
                obj[2] = rS.getString("TenDeTai");
                obj[3] = rS.getString("LoaiDeTai");
                obj[4] = rS.getString("CapDeTai");
                obj[5] = rS.getString("DonViChuTri");
                obj[6] = rS.getString("DonViThucHien");
                obj[7] = dateFormat.format(rS.getDate("ThoiGianBatDau"));
                obj[8] = dateFormat.format(rS.getDate("ThoiGianKetThuc"));
                obj[9] = rS.getString("KinhPhiThucHien");

                tableModel1.addRow(obj);
            }
            jTable1.setModel(tableModel1);

        } catch (SQLException ex) {
            System.out.println(ex.toString());

        }
    }

    private void printTableChuyenDe() {
        String sql = "Select * from thongtin_chuyende";
        String[] objTieuDe = new String[]{"STT", "Mã chuyên đề", "Tên chuyên đề", "Mã đề tài", "Thời gian bắt đầu", "Thời gian kết thúc", "Số tiền", "Người thực hiện", "Tình trạng thực hiện", "Số tiền thuế"};

        DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);
        jTable3.setLayout(null);
        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);
            int count = 0;
            while (rS.next()) {
                count++;
                Object[] obj = new Object[10];
                obj[0] = count;
                obj[1] = rS.getString("MaChuyenDe");
                obj[2] = rS.getString("TenChuyenDe");
                obj[3] = rS.getString("MaDeTai");
                obj[4] = dateFormat.format(rS.getDate("ThoiGianBatDau"));
                obj[5] = dateFormat.format(rS.getDate("ThoiGianKetThuc"));
                obj[6] = rS.getDouble("SoTien");
                obj[7] = rS.getString("NguoiThucHien");
                obj[8] = rS.getString("TinhTrangThucHien");
                obj[9] = rS.getDouble("SoTienThue");

                tableModel1.addRow(obj);
            }

            jTable3.setModel(tableModel1);
        } catch (SQLException ex) {
            System.out.println(ex.toString());
            JOptionPane.showMessageDialog(null, "Xảy ra lỗi trong quá trình tìm !", "Lỗi ", JOptionPane.ERROR_MESSAGE);

        }

    }

    private void printTableGV() {
        String sql = "Select * from thongtin_giangvien";
        String[] objTieuDe = new String[]{"STT", "Mã GV", "Mã đề tài", "Họ tên GV", "Chức danh", "Điện thoại", "Email", "Địa chỉ", "Bộ Môn", "Chi bộ", "Ngày sinh"};

        DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);

        jTable2.setLayout(null);
        jTable2.setRowHeight(25);
        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);
            int count = 0;
            while (rS.next()) {

                count++;
                Object[] obj = new Object[11];
                obj[0] = count;
                obj[1] = rS.getString("MaGV");
                obj[2] = rS.getString("MaDeTai");
                obj[3] = rS.getString("HoTenGV");
                obj[4] = rS.getString("ChucDanh");
                obj[5] = rS.getString("DienThoai");
                obj[6] = rS.getString("Email");
                obj[7] = rS.getString("DiaChi");
                obj[8] = rS.getString("BoMon");
                obj[9] = rS.getString("ChiBo");
                obj[10] = dateFormat.format(rS.getDate("NgaySinh"));

                tableModel1.addRow(obj);
            }

            jTable2.setModel(tableModel1);
        } catch (SQLException ex) {
            System.out.println(ex.toString());

        }
    }

    private void printTableTTTheoDoi() {

        String sql = "Select * from thongtin_theodoi";
        String[] objTieuDe = new String[]{"STT", "Mã theo dõi", "Mã đề tài", "Lí do", "Số tiền", "Ngày thực hiện", "Người thực hiện", "Ghi chú"};

        DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);
        jTable5.setLayout(null);
        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);
            int count = 0;
            while (rS.next()) {
                count++;
                Object[] obj = new Object[8];
                obj[0] = count;
                obj[1] = rS.getString("MaTheoDoi");
                obj[2] = rS.getString("MaDeTai");
                obj[3] = rS.getString("LiDo");
                obj[4] = rS.getDouble("SoTien");
                obj[5] = dateFormat.format(rS.getDate("NgayThucHien"));
                obj[6] = rS.getString("NguoiThucHien");
                obj[7] = rS.getString("GhiChu");

                tableModel1.addRow(obj);
            }

            jTable5.setModel(tableModel1);
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }

    }

    private void printTableChiPhiKhac() {
        String sql = "Select * from thongtin_chiphikhac";
        String[] objTieuDe = new String[]{"STT", "Mã chi khác", "Mã đề tài", "Lí do", "Số tiền", "Thời gian bắt đầu", "Thời gian kết thúc", "Người thực hiện", "Thời gian chi", "Ghi chú", "Tình trạng chi"};

        DefaultTableModel tableModel1 = new DefaultTableModel(objTieuDe, 0);
        jTable4.setLayout(null);
        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);
            int count = 0;
            while (rS.next()) {
                count++;
                Object[] obj = new Object[11];
                obj[0] = count;
                obj[1] = rS.getString("MaChiKhac");
                obj[2] = rS.getString("MaDeTai");
                obj[3] = rS.getString("LiDo");
                obj[4] = rS.getDouble("SoTien");
                obj[5] = dateFormat.format(rS.getDate("ThoiGianBatDau"));
                obj[6] = dateFormat.format(rS.getDate("ThoiGianKetThuc"));
                obj[7] = rS.getString("NguoiThucHien");
                obj[8] = dateFormat.format(rS.getDate("ThoiGianChi"));
                obj[9] = rS.getString("GhiChu");
                obj[10] = rS.getString("TinhTrangChi");

                tableModel1.addRow(obj);
            }
            jTable4.setModel(tableModel1);
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }

    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formTimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formTimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formTimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formTimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formTimKiem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInKetQuaCD;
    private javax.swing.JButton btnInKetQuaChiKhac;
    private javax.swing.JButton btnInKetQuaTheoDoi;
    private javax.swing.JButton btnTimKiemChiKhac;
    private javax.swing.JButton btnTimKiemChuyenDe;
    private javax.swing.JButton btnTimKiemGV;
    private javax.swing.JButton btnTimKiemTTTD;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRBoMon;
    private javax.swing.JRadioButton jRChiBo;
    private javax.swing.JRadioButton jRChucDanh;
    private javax.swing.JRadioButton jRLoaiDeTai;
    private javax.swing.JRadioButton jRMaChiKhac;
    private javax.swing.JRadioButton jRMaChuyenDe;
    private javax.swing.JRadioButton jRMaDeTai;
    private javax.swing.JRadioButton jRMaDeTaiCD;
    private javax.swing.JRadioButton jRMaDeTaiChiKhac;
    private javax.swing.JRadioButton jRMaDeTaiGV;
    private javax.swing.JRadioButton jRMaDeTaiTheoDoi;
    private javax.swing.JRadioButton jRMaGV;
    private javax.swing.JRadioButton jRMaTheoDoi;
    private javax.swing.JRadioButton jRNguoiThucHien;
    private javax.swing.JRadioButton jRNguoiThucHienChiKhac;
    private javax.swing.JRadioButton jRNguoiThucHienTheoDoi;
    private javax.swing.JRadioButton jRTenChuyenDe;
    private javax.swing.JRadioButton jRTenDeTai;
    private javax.swing.JRadioButton jRTenGV;
    private javax.swing.JRadioButton jRTinhTrangThucHien;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField txtTimKiemChiKhac;
    private javax.swing.JTextField txtTimKiemChuyenDe;
    private javax.swing.JTextField txtTimKiemDeTai;
    private javax.swing.JTextField txtTimKiemGV;
    private javax.swing.JTextField txtTimKiemTTTD;
    // End of variables declaration//GEN-END:variables

}
