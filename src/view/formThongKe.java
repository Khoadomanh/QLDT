/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.io.font.PdfEncodings;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import conn.Data_Access;
import dao.ThongTin_DeTai_Business;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ThongTin_DeTai;
import utils.Utils;

/**
 *
 * @author Admin
 */
public class formThongKe extends javax.swing.JFrame {

    /**
     * Creates new form formThongKe
     */
    public formThongKe() {
        initComponents();
        String[] objTieuDe = new String[]{"STT", "Tháng", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0);
        jTable1.setModel(tableModel);

        String[] objTieuDe1 = new String[]{"STT", "Chức danh", "Số lượng"};
        tableModel1 = new DefaultTableModel(objTieuDe1, 0);
        jTable2.setModel(tableModel1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        tfThongKe = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jComboBoxLuaChon = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jComboBoxGV = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jRadioQuaHan = new javax.swing.JRadioButton();
        jRadioDungHan = new javax.swing.JRadioButton();
        btnThongKe = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        btnGiaHan = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSoBanGhi = new javax.swing.JTextField();
        btnIn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tfThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfThongKeActionPerformed(evt);
            }
        });

        jButton1.setText("Thống kê");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton5.setText("In thống kê");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBoxLuaChon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo năm", "Loại đề tài", "Cấp đề tài", "Kinh phí", "Số giờ quy đổi" }));
        jComboBoxLuaChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLuaChonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton5))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jComboBoxLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jComboBoxLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5))
        );

        jTabbedPane1.addTab("Thống kê đề tài", jPanel1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton6.setText("In thống kê");
        jButton6.setToolTipText("");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jComboBoxGV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo chức danh", "Theo bộ môn", "Theo chi bộ" }));

        jButton2.setText("THỐNG KÊ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jComboBoxGV, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxGV, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6))
        );

        jTabbedPane1.addTab("Thống kê giảng viên", jPanel2);

        buttonGroup1.add(jRadioQuaHan);
        jRadioQuaHan.setText("Thống kê giảng viên hoàn thành đề tải quá hạn");
        jRadioQuaHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioQuaHanActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioDungHan);
        jRadioDungHan.setText("Thống kê giảng viên hoàn thành đề tài đúng hạn");

        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable);

        btnGiaHan.setText("Gia hạn");
        btnGiaHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaHanActionPerformed(evt);
            }
        });

        jLabel2.setText("Số bản ghi:");

        btnIn.setText("In");
        btnIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnIn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGiaHan))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(txtSoBanGhi))
                    .addComponent(jRadioQuaHan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jRadioDungHan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(btnThongKe))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioQuaHan)
                    .addComponent(jRadioDungHan)
                    .addComponent(btnThongKe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtSoBanGhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGiaHan)
                    .addComponent(btnIn)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Thống kê theo hạn", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfThongKeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfThongKeActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String link = "";
        JFileChooser fileChoose = new JFileChooser("D:\\");
        int check = fileChoose.showOpenDialog(fileChoose);
        if (check == JFileChooser.OPEN_DIALOG) {
            link = fileChoose.getSelectedFile().getAbsolutePath();
            try {
                PdfFont hFont = PdfFontFactory.createFont("font\\tahoma.ttf", PdfEncodings.IDENTITY_H, true);
                PdfWriter pdfWriter = new PdfWriter(link);
                Calendar c = Calendar.getInstance();
                PdfDocument pdfDocument = new PdfDocument(pdfWriter);

                Document document = new Document(pdfDocument);

                document.add(new Paragraph("TRƯỜNG ĐẠI HỌC BÁCH KHOA HÀ NỘI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph("Viện Công Nghệ Thông Tin & Truyền Thông").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("THỐNG KÊ SỐ LƯỢNG GIẢNG VIÊN").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("NĂM"+tfThongKe.getText()).setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("TÌM KIẾM SÁCH").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setItalic().setFontSize(10));

                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                Table table = new Table(3);
                table.addHeaderCell(jTable2.getColumnName(0)).setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell(jTable2.getColumnName(1)).setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell(jTable2.getColumnName(2)).setFont(hFont).setTextAlignment(TextAlignment.CENTER);

                for (int row = 0; row < jTable2.getRowCount(); row++) {

                    for (int column = 0; column < jTable2.getColumnCount(); column++) {

                        table.addCell(jTable2.getValueAt(row, column) + "").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                    }
                }
                document.add(table);
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Hà Nội,Ngày" + c.get(Calendar.DAY_OF_MONTH) + "/" + (c.get(Calendar.MONTH) + 1)
                        + "/" + c.get(Calendar.YEAR)).setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph("Người tạo bảng").setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph(" "));
                document.close();
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler", link});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi in file");
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jComboBoxLuaChon.getSelectedIndex() == 0) {
            printTableDTNam();
        } else if (jComboBoxLuaChon.getSelectedIndex() == 1) {
            printTableLoaiDT();
        } else if (jComboBoxLuaChon.getSelectedIndex() == 2) {
            printTableCapDT();
        } else if (jComboBoxLuaChon.getSelectedIndex() == 3) {
            printTableKinhPhi();
        } else {
            printTableSoGioQD();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private String tieuDe = "";
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String link = "";
        JFileChooser fileChoose = new JFileChooser("D:\\");
        int check = fileChoose.showOpenDialog(fileChoose);
        if (check == JFileChooser.OPEN_DIALOG) {
            link = fileChoose.getSelectedFile().getAbsolutePath();
            try {
                PdfFont hFont = PdfFontFactory.createFont("font\\tahoma.ttf", PdfEncodings.IDENTITY_H, true);
                PdfWriter pdfWriter = new PdfWriter(link);
                Calendar c = Calendar.getInstance();
                PdfDocument pdfDocument = new PdfDocument(pdfWriter);

                Document document = new Document(pdfDocument);

                document.add(new Paragraph("TRƯỜNG ĐẠI HỌC BÁCH KHOA HÀ NỘI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph("Viện Công Nghệ Thông Tin & Truyền Thông").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(22));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("THỐNG KÊ SỐ LƯỢNG ĐỀ TÀI").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                document.add(new Paragraph("NĂM:  " + tfThongKe.getText()).setFont(hFont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(16));
                //document.add(new Paragraph("TÌM KIẾM SÁCH").setFont(hFont).setTextAlignment(TextAlignment.CENTER).setItalic().setFontSize(10));

                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                Table table = new Table(3);
                table.addHeaderCell("STT").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Tháng").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                table.addHeaderCell("Số lượng").setFont(hFont).setTextAlignment(TextAlignment.CENTER);

                for (int row = 0; row < jTable1.getRowCount(); row++) {

                    for (int column = 0; column < jTable1.getColumnCount(); column++) {

                        table.addCell(jTable1.getValueAt(row, column) + "").setFont(hFont).setTextAlignment(TextAlignment.CENTER);
                    }
                }
                document.add(table);
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Hà Nội,Ngày" + c.get(Calendar.DAY_OF_MONTH) + "/" + (c.get(Calendar.MONTH) + 1)
                        + "/" + c.get(Calendar.YEAR)).setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph("Người tạo bảng").setFont(hFont).setTextAlignment(TextAlignment.RIGHT).setItalic().setFontSize(10));
                document.add(new Paragraph(" "));
                document.close();
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler", link});
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi in file");
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBoxLuaChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLuaChonActionPerformed
        if (jComboBoxLuaChon.getSelectedIndex() == 0) {
            tfThongKe.setEnabled(true);
        } else {
            tfThongKe.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxLuaChonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jComboBoxGV.getSelectedIndex() == 0) {
            printTableCBTCD();
        } else if (jComboBoxGV.getSelectedIndex() == 1) {
            printTableCBTBM();

        } else {
            printTableCBTCB();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioQuaHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioQuaHanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioQuaHanActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        if (jRadioQuaHan.isSelected()) {

            btnGiaHan.setEnabled(true);

            hienThiQuaHan();
        } else if (jRadioDungHan.isSelected()) {

            btnGiaHan.setEnabled(false);

            hienThiDungHan();
        }
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnGiaHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaHanActionPerformed

        int selectedRow = jTable.getSelectedRow();

        if (selectedRow == -1) {

            JOptionPane.showMessageDialog(null, "Chưa chọn đề tài để gia hạn");

            return;
        } else {

            String maDeTai = jTable.getValueAt(selectedRow, 0) + "";

            String date = jTable.getValueAt(selectedRow, 5) + "";

            formGiaHan giaHan = new formGiaHan(date, maDeTai);

            giaHan.setVisible(true);

            giaHan.setLocationRelativeTo(null);

        }
    }//GEN-LAST:event_btnGiaHanActionPerformed

    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed

        String link = "";

        JFileChooser fileChooser = new JFileChooser("D:\\");

        int check = fileChooser.showSaveDialog(fileChooser);

        if (check == JFileChooser.OPEN_DIALOG) {

            link = fileChooser.getSelectedFile().getAbsolutePath();

            try {
                PdfFont hfont = PdfFontFactory.createFont("font\\tahoma.ttf", PdfEncodings.IDENTITY_H, true);

                PdfWriter pdfWriter = new PdfWriter(link);

                PdfDocument pdfDocument = new PdfDocument(pdfWriter);

                Document document = new Document(pdfDocument);

                document.add(new Paragraph("Viện CNTT - Đại học Bách Khoa Hà Nội").setFont(hfont).setTextAlignment(TextAlignment.LEFT));

                document.add(new Paragraph("Thống kê theo hạn của đề tài").setFont(hfont).setTextAlignment(TextAlignment.CENTER).setBold().setFontSize(25));

                document.add(new Paragraph(" "));

                document.add(new Paragraph(" "));

                document.add(new Paragraph("Số bản ghi: " + txtSoBanGhi.getText()).setFont(hfont).setTextAlignment(TextAlignment.LEFT));

                Table table = new Table(7);

                table.addHeaderCell(jTable.getColumnName(0)).setFont(hfont);

                table.addHeaderCell(jTable.getColumnName(1)).setFont(hfont);

                table.addHeaderCell(jTable.getColumnName(2)).setFont(hfont);

                table.addHeaderCell(jTable.getColumnName(3)).setFont(hfont);

                table.addHeaderCell(jTable.getColumnName(4)).setFont(hfont);

                Table setFont = table.addHeaderCell(jTable.getColumnName(5)).setFont(hfont);

                table.addHeaderCell(jTable.getColumnName(6)).setFont(hfont);

                for (int row = 0; row < jTable.getRowCount(); row++) {

                    for (int column = 0; column < jTable.getColumnCount(); column++) {

                        table.addCell(jTable.getValueAt(row, column) + "").setFont(hfont);
                    }
                }

                document.add(table);

                Calendar cal = Calendar.getInstance();

                document.add(new Paragraph(cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" + cal.get(Calendar.YEAR)).setFont(hfont).setTextAlignment(TextAlignment.RIGHT).setItalic());

                document.close();
            } catch (IOException ex) {
                Logger.getLogger(formThongKe.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                //mở file pdf vừa tạo
                Runtime.getRuntime().exec(new String[]{"rundll32", "url.dll,FileProtocolHandler", link});
            } catch (IOException ex) {
                Logger.getLogger(formThongKe.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnInActionPerformed

    public void hienThiQuaHan() {

        String[] titile = new String[]{"Mã đề tài", "Tên đề tài", "Đơn vị chủ trì", "Đơn vị thực hiện", "Thời gian bắt đầu", "Thời gian kết thúc", "Số tiền phạt"};

        DefaultTableModel model = new DefaultTableModel(titile, 0);

        ThongTin_DeTai_Business obj_ = new ThongTin_DeTai_Business();

        List<ThongTin_DeTai> lst = new ArrayList();

        lst = obj_.getList("Lấy list thông tin đề tài");

        //lấy ngày tháng hiện tại
        Calendar cal = Calendar.getInstance();

        Date curentDate = new Date(cal.get(Calendar.YEAR) - 1900, cal.get(Calendar.MONTH), cal.get(Calendar.DATE));

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        Object[] obj__ = new Object[7];

        double tienPhat = 0;

        int dem = 0;

        for (ThongTin_DeTai obj : lst) {

            try {
                tienPhat = Utils.tienPhat(dateFormat.parse(obj.getThoiGianKetThuc()), curentDate);

                if (tienPhat > 0) {

                    dem++;

                    obj__[0] = obj.getMaDeTai();

                    obj__[1] = obj.getTenDeTai();

                    obj__[2] = obj.getDonViChuTri();

                    obj__[3] = obj.getDonViThucHien();

                    obj__[4] = obj.getThoiGianBatDau();

                    obj__[5] = obj.getThoiGianKetThuc();

                    obj__[6] = tienPhat;

                    model.addRow(obj__);

                }
            } catch (ParseException ex) {
                System.out.println(ex);
            }
        }

        txtSoBanGhi.setText(dem + "");

        jTable.setModel(model);
    }

    public void hienThiDungHan() {

        String[] titile = new String[]{"Mã đề tài", "Tên đề tài", "Đơn vị chủ trì", "Đơn vị thực hiện", "Thời gian bắt đầu", "Thời gian kết thúc", "Số tiền phạt"};

        DefaultTableModel model = new DefaultTableModel(titile, 0);

        ThongTin_DeTai_Business obj_ = new ThongTin_DeTai_Business();

        List<ThongTin_DeTai> lst = new ArrayList();

        lst = obj_.getList("Lấy list thông tin đề tài");

        //lấy ngày tháng hiện tại
        Calendar cal = Calendar.getInstance();

        Date curentDate = new Date(cal.get(Calendar.YEAR) - 1900, cal.get(Calendar.MONTH), cal.get(Calendar.DATE));

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        Object[] obj__ = new Object[7];

        double tienPhat = 0;

        int dem = 0;

        for (ThongTin_DeTai obj : lst) {

            try {
                tienPhat = Utils.tienPhat(dateFormat.parse(obj.getThoiGianKetThuc()), curentDate);

                if (tienPhat <= 0) {

                    dem++;

                    obj__[0] = obj.getMaDeTai();

                    obj__[1] = obj.getTenDeTai();

                    obj__[2] = obj.getDonViChuTri();

                    obj__[3] = obj.getDonViThucHien();

                    obj__[4] = obj.getThoiGianBatDau();

                    obj__[5] = obj.getThoiGianKetThuc();

                    obj__[6] = 0;

                    model.addRow(obj__);

                }
            } catch (ParseException ex) {
                System.out.println(ex);
            }
        }

        jTable.setModel(model);

        txtSoBanGhi.setText(dem + "");
    }

    private DefaultTableModel tableModel;
    private DefaultTableModel tableModel1;

    private void printTableCBTCD() {
        String sql = "select ChucDanh,count(MaGV) from thongtin_giangvien group by ChucDanh;";
        //tạo tên tiêu đề
        String[] objTieuDe = new String[]{"STT", "Chức danh", "Số lượng"};
        // đổ hết dữ liệu vào model
        tableModel = new DefaultTableModel(objTieuDe, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        // in ra bảng jtable
        jTable2.setModel(tableModel);
        //lấy đối tượng connection mà đã ép link cơ sở dữ liệu rồi
        Data_Access dA = new Data_Access();
        Connection conn = dA.getConnection();
        try {
            Statement sT = conn.createStatement(); //đối tượng Statement để làm việc với mySQL
            ResultSet rS = sT.executeQuery(sql); //lưu kết quả khi thực hiện câu lệnh mysql
            int count = 1;
            while (rS.next()) {
                Object[] obj = new Object[3];
                obj[0] = count;//3 là số thuộc tính trong bảng kết nối
                obj[1] = rS.getString("ChucDanh");
                obj[2] = rS.getString("count(MaGV)");
                count++;
                tableModel.addRow(obj); //đưa dữ liệu vào trong model
            }
        } catch (SQLException ex) {
            System.out.println("lỗi printbookChucDanh");
        }
    }

    private void printTableCBTBM() {
        String sql = "select BoMon,count(MaGV) from thongtin_giangvien group by BoMon;";

        String[] objTieuDe = new String[]{"STT", "Bộ môn", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jTable2.setModel(tableModel);

        Data_Access dA = new Data_Access();
        Connection conn = dA.getConnection();
        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);
            int count = 0;
            while (rS.next()) {
                Object[] obj = new Object[3];
                count++;
                obj[0] = count;
                obj[1] = rS.getString("BoMon");
                obj[2] = rS.getString("count(MaGV)");
                tableModel.addRow(obj);
            }
        } catch (SQLException ex) {
            System.out.println("lỗi printbookBoMon");
        }
    }

    private void printTableCBTCB() {
        String sql = "select ChiBo, count(ChiBo)\n"
                + "from thongtin_giangvien\n"
                + "group by ChiBo\n" + "order by count(ChiBo) desc";

        String[] objTieuDe = new String[]{"STT", "Chi bộ", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0);

        jTable2.setModel(tableModel);
        jTable2.setRowHeight(25);

        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);

            int count = 0;
            while (rS.next()) {

                count++;
                Object[] obj = new Object[3];
                obj[0] = count;
                obj[1] = rS.getString("ChiBo");
                obj[2] = rS.getInt("count(ChiBo)");

                tableModel.addRow(obj);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

    private void printTableDTNam() {
        if (tfThongKe.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nhập năm cần thống kê");
            return;
        }
        String sql = "SELECT month(bangmoi.ThoiGianBatDau),count(bangmoi.MaDeTai) FROM (select * from thongtin_detai where extract(year from ThoiGianBatDau)='" + tfThongKe.getText() + "' ) as bangmoi"
                + " group by year(bangmoi.ThoiGianBatDau),month(bangmoi.ThoiGianBatDau);";
        //tạo tên tiêu đề
        System.out.println("" + sql);
        String[] objTieuDe = new String[]{"STT", "Tháng", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        // in ra bảng jtable
        jTable1.setModel(tableModel);
        //lấy đối tượng connection mà đã ép link cơ sở dữ liệu rồi
        Data_Access dA = new Data_Access();
        Connection conn = dA.getConnection();
        try {
            Statement sT = conn.createStatement(); //đối tượng Statement để làm việc với mySQL
            ResultSet rS = sT.executeQuery(sql); //lưu kết quả khi thực hiện câu lệnh mysql
            int count = 0;
            while (rS.next()) {
                count++;
                Object[] obj = new Object[3];
                obj[0] = count;
                obj[1] = rS.getString("month(bangmoi.ThoiGianBatDau)");
                obj[2] = rS.getString("count(bangmoi.MaDeTai)");
                tableModel.addRow(obj); //đưa dữ liệu vào trong model
            }
        } catch (SQLException ex) {
            System.out.println("lỗi printbookDT");
        }
    }

    private void printTableLoaiDT() {
        String sql = "select LoaiDeTai, count(LoaiDeTai)\n"
                + "from thongtin_detai\n"
                + "group by LoaiDeTai\n" + "order by count(LoaiDeTai) desc";

        String[] objTieuDe = new String[]{"STT", "Loại đề tài ", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0);

        jTable1.setModel(tableModel);
        jTable1.setRowHeight(25);

        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);

            int count = 0;
            while (rS.next()) {

                count++;
                Object[] obj = new Object[3];
                obj[0] = count;
                obj[1] = rS.getString("LoaiDeTai");
                obj[2] = rS.getInt("count(LoaiDeTai)");

                tableModel.addRow(obj);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

    private void printTableCapDT() {
        String sql = "select CapDeTai, count(CapDeTai)\n"
                + "from thongtin_detai\n"
                + "group by CapDeTai\n" + "order by count(CapDeTai) desc";

        String[] objTieuDe = new String[]{"STT", "Cấp đề tài ", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0);

        jTable1.setModel(tableModel);
        jTable1.setRowHeight(25);

        Data_Access dA = new Data_Access();

        Connection conn = dA.getConnection();

        try {
            Statement sT = conn.createStatement();
            ResultSet rS = sT.executeQuery(sql);

            int count = 0;
            while (rS.next()) {

                count++;
                Object[] obj = new Object[3];
                obj[0] = count;
                obj[1] = rS.getString("CapDeTai");
                obj[2] = rS.getInt("count(CapDeTai)");

                tableModel.addRow(obj);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

    private void printTableKinhPhi() {
        String sql1 = "select count(MaDeTai) from thongtin_detai where KinhPhiThucHien < 10000000";
        String sql2 = "select count(MaDeTai) from thongtin_detai where KinhPhiThucHien >=10000000 and KinhPhiThucHien <20000000";
        String sql3 = "select count(MaDeTai) from thongtin_detai where KinhPhiThucHien >=20000000 and KinhPhiThucHien <30000000 ";
        String sql4 = "select count(MaDeTai) from thongtin_detai where KinhPhiThucHien >=30000000  ";
        String[] sql = new String[]{sql1, sql2, sql3, sql4};
        String[] objTieu = new String[]{"< 10000000", "10000000 <= k <20000000", "20000000 <= k < 30000000", "30000000"};

        String[] objTieuDe = new String[]{"STT", "Kinh phí thực hiện (kp) ", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jTable1.setModel(tableModel);

        Data_Access dA = new Data_Access();
        Connection conn = dA.getConnection();
        int count = 0;
        for (int i = 0; i < 4; i++) {
            try {
                Statement sT = conn.createStatement();
                ResultSet rS = sT.executeQuery(sql[i]);

                while (rS.next()) {
                    count++;
                    Object[] obj = new Object[3];
                    obj[0] = count;
                    obj[1] = objTieu[i];
                    obj[2] = rS.getString("count(MaDeTai)");
                    tableModel.addRow(obj);
                }
            } catch (SQLException ex) {
                System.out.println("lỗi printbookChucDanh");
            }
        }
    }

    private void printTableSoGioQD() {
        String sql1 = "select count(MaDeTai) from thongtin_detai where SoGioQuyDoi<100";
        String sql2 = "select count(MaDeTai) from thongtin_detai where SoGioQuyDoi>=100 and SoGioQuyDoi<200";
        String sql3 = "select count(MaDeTai) from thongtin_detai where SoGioQuyDoi>200";
        String[] sql = new String[]{sql1, sql2, sql3};
        String[] objTieu = new String[]{"<100h", "100h<= t <200h", ">200h"};

        String[] objTieuDe = new String[]{"STT", "Số giờ quy đổi(t) ", "Số lượng"};

        tableModel = new DefaultTableModel(objTieuDe, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jTable1.setModel(tableModel);

        Data_Access dA = new Data_Access();
        Connection conn = dA.getConnection();
        int count = 0;
        for (int i = 0; i < 3; i++) {
            try {
                Statement sT = conn.createStatement();
                ResultSet rS = sT.executeQuery(sql[i]);

                while (rS.next()) {
                    count++;
                    Object[] obj = new Object[3];
                    obj[0] = count;
                    obj[1] = objTieu[i];
                    obj[2] = rS.getString("count(MaDeTai)");
                    tableModel.addRow(obj);
                }
            } catch (SQLException ex) {
                System.out.println("lỗi printbookChucDanh");
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGiaHan;
    private javax.swing.JButton btnIn;
    private javax.swing.JButton btnThongKe;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBoxGV;
    private javax.swing.JComboBox<String> jComboBoxLuaChon;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioDungHan;
    private javax.swing.JRadioButton jRadioQuaHan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField tfThongKe;
    private javax.swing.JTextField txtSoBanGhi;
    // End of variables declaration//GEN-END:variables
}
